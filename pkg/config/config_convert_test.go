package config

import (
	"testing"

	"github.com/aaronsky/asc-go/asc"
	"github.com/stretchr/testify/assert"
)

func TestPlatformAPIValue(t *testing.T) {
	ios, err := PlatformiOS.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, ios, asc.PlatformIOS)
	macos, err := PlatformMacOS.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, macos, asc.PlatformMACOS)
	tvos, err := PlatformTvOS.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, tvos, asc.PlatformTVOS)
	_, err = platform("watchOS").APIValue()
	assert.Error(t, err)
}

func TestReleaseTypeAPIValue(t *testing.T) {
	manual, err := ReleaseTypeManual.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, manual, "MANUAL")
	afterApproval, err := ReleaseTypeAfterApproval.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, afterApproval, "AFTER_APPROVAL")
	scheduled, err := ReleaseTypeScheduled.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, scheduled, "SCHEDULED")
	_, err = releaseType("never").APIValue()
	assert.Error(t, err)
}

func TestPreviewTypeAPIValue(t *testing.T) {
	appleTV, err := PreviewTypeAppleTV.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, appleTV, asc.PreviewTypeAppleTV)
	desktop, err := PreviewTypeDesktop.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, desktop, asc.PreviewTypeDesktop)
	iPad105, err := PreviewTypeiPad105.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPad105, asc.PreviewTypeiPad105)
	iPad97, err := PreviewTypeiPad97.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPad97, asc.PreviewTypeiPad97)
	iPadPro129, err := PreviewTypeiPadPro129.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPadPro129, asc.PreviewTypeiPadPro129)
	iPadPro3Gen11, err := PreviewTypeiPadPro3Gen11.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPadPro3Gen11, asc.PreviewTypeiPadPro3Gen11)
	iPadPro3Gen129, err := PreviewTypeiPadPro3Gen129.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPadPro3Gen129, asc.PreviewTypeiPadPro3Gen129)
	iPhone35, err := PreviewTypeiPhone35.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone35, asc.PreviewTypeiPhone35)
	iPhone40, err := PreviewTypeiPhone40.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone40, asc.PreviewTypeiPhone40)
	iPhone47, err := PreviewTypeiPhone47.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone47, asc.PreviewTypeiPhone47)
	iPhone55, err := PreviewTypeiPhone55.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone55, asc.PreviewTypeiPhone55)
	iPhone58, err := PreviewTypeiPhone58.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone58, asc.PreviewTypeiPhone58)
	iPhone65, err := PreviewTypeiPhone65.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone65, asc.PreviewTypeiPhone65)
	watchSeries3, err := PreviewTypeWatchSeries3.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, watchSeries3, asc.PreviewTypeWatchSeries3)
	watchSeries4, err := PreviewTypeWatchSeries4.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, watchSeries4, asc.PreviewTypeWatchSeries4)
	_, err = previewType("Google Pixel").APIValue()
	assert.Error(t, err)
}

func TestScreenshotTypeAPIValue(t *testing.T) {
	appleTV, err := ScreenshotTypeAppleTV.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, appleTV, asc.ScreenshotDisplayTypeAppAppleTV)
	desktop, err := ScreenshotTypeDesktop.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, desktop, asc.ScreenshotDisplayTypeAppDesktop)
	iPad105, err := ScreenshotTypeiPad105.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPad105, asc.ScreenshotDisplayTypeAppiPad105)
	iPad97, err := ScreenshotTypeiPad97.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPad97, asc.ScreenshotDisplayTypeAppiPad97)
	iPadPro129, err := ScreenshotTypeiPadPro129.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPadPro129, asc.ScreenshotDisplayTypeAppiPadPro129)
	iPadPro3Gen11, err := ScreenshotTypeiPadPro3Gen11.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPadPro3Gen11, asc.ScreenshotDisplayTypeAppiPadPro3Gen11)
	iPadPro3Gen129, err := ScreenshotTypeiPadPro3Gen129.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPadPro3Gen129, asc.ScreenshotDisplayTypeAppiPadPro3Gen129)
	iPhone35, err := ScreenshotTypeiPhone35.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone35, asc.ScreenshotDisplayTypeAppiPhone35)
	iPhone40, err := ScreenshotTypeiPhone40.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone40, asc.ScreenshotDisplayTypeAppiPhone40)
	iPhone47, err := ScreenshotTypeiPhone47.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone47, asc.ScreenshotDisplayTypeAppiPhone47)
	iPhone55, err := ScreenshotTypeiPhone55.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone55, asc.ScreenshotDisplayTypeAppiPhone55)
	iPhone58, err := ScreenshotTypeiPhone58.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone58, asc.ScreenshotDisplayTypeAppiPhone58)
	iPhone65, err := ScreenshotTypeiPhone65.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iPhone65, asc.ScreenshotDisplayTypeAppiPhone65)
	watchSeries3, err := ScreenshotTypeWatchSeries3.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, watchSeries3, asc.ScreenshotDisplayTypeAppWatchSeries3)
	watchSeries4, err := ScreenshotTypeWatchSeries4.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, watchSeries4, asc.ScreenshotDisplayTypeAppWatchSeries4)
	iMessageiPad105, err := ScreenshotTypeiMessageiPad105.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPad105, asc.ScreenshotDisplayTypeiMessageAppIPad105)
	iMessageiPad97, err := ScreenshotTypeiMessageiPad97.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPad97, asc.ScreenshotDisplayTypeiMessageAppIPad97)
	iMessageiPadPro129, err := ScreenshotTypeiMessageiPadPro129.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPadPro129, asc.ScreenshotDisplayTypeiMessageAppIPadPro129)
	iMessageiPadPro3Gen11, err := ScreenshotTypeiMessageiPadPro3Gen11.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPadPro3Gen11, asc.ScreenshotDisplayTypeiMessageAppIPadPro3Gen11)
	iMessageiPadPro3Gen129, err := ScreenshotTypeiMessageiPadPro3Gen129.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPadPro3Gen129, asc.ScreenshotDisplayTypeiMessageAppIPadPro3Gen129)
	iMessageiPhone40, err := ScreenshotTypeiMessageiPhone40.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPhone40, asc.ScreenshotDisplayTypeiMessageAppIPhone40)
	iMessageiPhone47, err := ScreenshotTypeiMessageiPhone47.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPhone47, asc.ScreenshotDisplayTypeiMessageAppIPhone47)
	iMessageiPhone55, err := ScreenshotTypeiMessageiPhone55.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPhone55, asc.ScreenshotDisplayTypeiMessageAppIPhone55)
	iMessageiPhone58, err := ScreenshotTypeiMessageiPhone58.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPhone58, asc.ScreenshotDisplayTypeiMessageAppIPhone58)
	iMessageiPhone65, err := ScreenshotTypeiMessageiPhone65.APIValue()
	assert.NoError(t, err)
	assert.Equal(t, iMessageiPhone65, asc.ScreenshotDisplayTypeiMessageAppIPhone65)
	_, err = screenshotType("Google Pixel").APIValue()
	assert.Error(t, err)
}
