name: build
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request: ~

env:
  GO111MODULE: on

jobs:
  tests:
    name: unit tests
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v1
        with:
          go-version: 1.15.x

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: go test -v -race -coverprofile coverage.out -covermode atomic ./...

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.30

  release:
    name: release
    if: github.event == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
      - tests
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v1
        with:
          go-version: 1.15.x

      - name: Login to Docker Hub
        run: |
          echo "${DOCKER_HUB_TOKEN}" | \
          docker login --username "${DOCKER_HUB_LOGIN}" --password-stdin
        env:
          DOCKER_HUB_LOGIN: ${{ secrets.DOCKER_HUB_LOGIN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
